# -*- coding: utf-8 -*-
"""Subclass model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DPgHvXinMIMHne1Gciu2xy5xu8B9Bbau
"""

import tensorflow.keras as keras
import tensorflow as tf
from sklearn.datasets import fetch_california_housing as cali
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler as st

data = cali();
x = data.data
y = data.target

x_train0, x_test , y_train0 , y_test  = train_test_split(x,y)
x_train1, x_val, y_train1 , y_val = train_test_split(x_train0 , y_train0)
ss = st()
x_train_scle = ss.fit_transform(x_train1)
x_val_scale = ss.transform(x_val)
x_test_scale = ss.transform(x_test)

x_train_scle_1 , x_train_scle_2 = x_train_scle[: , :6] , x_train_scle[: , -4:]
x_val_scale_1 , x_val_scale_2 =  x_val_scale[: , :6] , x_val_scale[: , -4:]
x_test_scale_1 , x_test_scale_2  =  x_test_scale[: , :6] , x_test_scale[: , -4:]

class WideAnn(keras.Model):
    def _init_(self,activation = 'relu' , **kwargs):
        super()._init_(**kwargs)
        self.hidden_layer_1 = keras.layers.Dense(50,activation=activation)
        self.hidden_layer_2 = keras.layers.Dense(10,activation=activation)
        self.final_out  = keras.layers.Dense(1)
        self.helper_out = keras.layers.Dense(1)

    def call(self , inputs):
        input_1 , input_2= inputs
        h1 = self.hidden_layer_1(inputs)
        h2 = self.hidden_layer_2(h1)
        con = keras.layers.concatenate([input_2 , h2])
        final = self.final_out(con)
        helper = self.helper_out(h2)
        return f'final : {final_out} , helper : {helper}'

model = WideAnn()

model.compile(loss=['mse','mse']  , optimizer = 'sgd' , metrics=['mae'] , loss_weights=[0.8 , 0.2])

model.fit((x_train_scle_1 , x_train_scle_2) ,
          (y_train1,y_train1) , epochs=20 ,
          validation_data= ((x_val_scale_1 , x_val_scale_2) , (y_val,y_val)));